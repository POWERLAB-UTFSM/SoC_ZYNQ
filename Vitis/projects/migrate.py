#!/usr/bin/env python3
import vitis
import os
import shutil

# This script is auto-generated by Vitis IDE

print("\n---------------------------------------------------------")
print("  Migrating classic Vitis projects to Vitis Unified IDE  ")
print("---------------------------------------------------------")

#Delete the workspace if already exists.
path_workspace='E:\\Repos\\SoC_ZYNQ\\Vitis\\projects\\workspace'
path_migrate='migrate.py'


if (os.path.isdir(path_workspace)):
    shutil.rmtree(path_workspace)
    print(f"Deleted workspace {path_workspace}")

# Create Vitis client
client = vitis.create_client()        
client.set_workspace(path_workspace)
print('Successfully created Vitis client on workspace {}'.format(client.get_workspace()))

client.set_sw_repo(level='LOCAL',path='E:\\Repos\\SoC_ZYNQ\\Vitis\\drivers')

# print("Migrating projects from classic Vitis IDE")

# Migrating platform project : 'C:\Users\alan.wilson\workspace\pform\platform.spr'
print("Creating platform component 'pform'")
hw_path='E:/Repos/SoC_ZYNQ/Vivado/xsa_hardware/HW_Zedboard_test_cdma.xsa'
platform = client.create_platform_component(name = 'pform', hw = hw_path)
platform.update_desc(desc = 'pform')

print("Adding new domain 'standalone_domain' for cpu: 'ps7_cortexa9_1' and OS: 'standalone'")
domain = platform.add_domain(cpu = 'ps7_cortexa9_1', os = 'standalone', name = 'standalone_domain', display_name = 'standalone on ps7_cortexa9_1')

print("Configuring the domain 'standalone_domain'...")
domain.add_qemu_data(path = platform.project_location + '/resources//standalone_domain/qemu')
shutil.copy(src = 'C:/Users/alan.wilson/workspace/pform/resources/pform/standalone_domain/qemu_args.txt', dst = platform.project_location + '/resources//standalone_domain/qemu_args.txt')
domain.add_qemu_args(qemu_option = 'PS', path = platform.project_location + '/resources//standalone_domain/qemu_args.txt')

print("Migrating BSP settings for the domain 'standalone_domain'")


platform.build()

# Migrating application project : 'app'
print("Creating application component 'app'")
app = client.create_app_component(name = 'app', platform = client.get_workspace() + '/pform/export/pform/pform.xpfm', domain = 'standalone_domain', template = 'empty_application')
# shutil.copytree(src = 'C:/Users/alan.wilson/workspace/app/src', dst = app.component_location + '/src', dirs_exist_ok = True)
app.set_app_config(key='USER_COMPILE_DEBUG_LEVEL', values=['-g3'])
app.set_app_config(key='USER_COMPILE_OTHER_FLAGS', values='"-fmessage-length=0 -MT"$@" -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard"')
app.set_app_config(key='USER_LINK_OTHER_FLAGS', values='"-mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard -Wl,-build-id=none"')
app.set_app_config(key='USER_LINKER_SCRIPT', values=['../src/lscript.ld'])

# Migrating system project : 'app_system'
print("Creating system project 'app_system'")
system_project = client.create_sys_project(name = 'app_system', platform = client.get_workspace() + '/pform/export/pform/pform.xpfm')
system_project.add_component(name = 'app')

vitis.dispose()
